@using DomainModule.Enums;
@model AppSettingModel

@{
    var YesNoDropDown = new List<string>()
    {
        "Yes",
        "No"
    };
}
<div class="container-fluid">
    <div class="card">
        <div class="card-header">
            <div class="h3 text-gray-800">
                Settings
            </div>
        </div>
        <div class="card-body">
            <form method="post" id="setting_form">
                <div class="row">
                    <table class="table table-bordered">
                        <thead>
                            <tr>
                                <th>SN</th>
                                <th>Key</th>
                                <th>Value</th>
                            </tr>
                        </thead>
                        <tbody id="setting_table">

                            @if (Model.AppSettings.Any())
                            {
                                var i = 1;
                                foreach (var data in Model.AppSettings)
                                {
                                    <tr>
                                        <td>@i</td>
                                        <td>
                                            <input type="hidden" value="@data.UserId" class="UserId" />
                                            <input type="hidden" value="@data.Key" class="Key" />
                                            <input type="text" class="form-control" readonly value="@data.DisplayName" name="DisplayName" />
                                        </td>
                                        <td>
                                            <input type="password" class="form-control Value" value="@data.Value" name="Value" required="required"/>
                                            @if (data.Key == AppSettingsEnum.EncryptionKey.ToString())
                                            {
                                                <span class="text-danger" id="errors"></span>
                                            }
                                        </td>
                                    </tr>
                                    i++;
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="3" class="text-center">No Available Settings</td>
                                </tr>
                            }
                        </tbody>

                    </table>

                </div>
                <div class="row">
                    <div class="col-md-12">
                        <button type="button" class="btn btn-success" id="save_btn">Save</button>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>
@section Scripts
    {
    <script>
        $(document).ready(function () {
            $("#save_btn").on("click", function () {
                event.preventDefault();
                BlockWindow();
                var data = [];
                var IsValid = true;
                $("#setting_table tr").each(function () {

                   
                    var key = $(this).find(".Key").val();
                    var value = $(this).find(".Value").val().trim();

                    if (key == "EncryptionKey") {
                        var errorsSpan = document.getElementById("errors");
                        errorsSpan.innerText = "";
                        if (value.length !== 16) {
                            errorsSpan.innerText = "Please enter a key with exactly 16 characters.";
                            IsValid = false;
                            UnBlockWindow();
                            return;
                        }

                        if (!/^[0-9a-fA-F]+$/.test(value)) {
                            errorsSpan.innerText = "Please enter a hexadecimal key using characters 0-9 and A-F only.";
                            IsValid = false;
                            UnBlockWindow();
                            return;
                        }

                    }

                    var item = {
                        Key: key,
                        Value: value,
                        UserId: $(this).find(".UserId").val()
                    }
                    data.push(item);
                })
                if (!IsValid) {
                    UnBlockWindow();
                    return false;
                }
                if (data.length <= 0) {
                    ShowErrorNotification("Please add at lease one setting.");
                    UnBlockWindow();
                    return false;
                }
                $.ajax({
                    method: "POST",
                    url: "/api/Setting/Update",
                    contentType: "application/json",
                    data: JSON.stringify(data),
                    success: function (response) {
                        if (response.StatusCode == 200) {
                            ShowSuccessNotification(response.Message);

                        } else {
                            ShowErrorNotification(response.Message);
                        }
                    },
                    error: function (error) {
                        console.log(error)
                        ShowErrorNotification(error.responseText);
                    }, complete: function () {
                        UnBlockWindow();
                    }

                })
            })
        })
    </script>
}